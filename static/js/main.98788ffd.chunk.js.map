{"version":3,"sources":["components/RecipeDetails.js","components/Recipe.js","components/Alert.js","App.js","index.js"],"names":["RecipeDetails","ingredients","map","ingredient","key","uuidv4","className","text","weight","Recipe","recipe","useState","show","setShow","label","image","url","src","alt","href","target","rel","onClick","Alert","alert","App","query","setQuery","recipes","setRecipes","setAlert","process","getData","a","Axios","get","result","data","more","console","log","hits","onSubmit","e","preventDefault","style","marginBottom","type","name","onChange","value","autoComplete","placeholder","ReactDOM","render","document","getElementById"],"mappings":"8RAceA,EAXO,SAAC,GACrB,OADyC,EAAlBC,YACJC,KAAI,SAACC,GACtB,OACE,wBAAIC,IAAKC,cAAUC,UAAU,mBAC3B,wBAAIA,UAAU,mBAAmBH,EAAWI,MAC5C,wBAAID,UAAU,qBAAd,YAA4CH,EAAWK,aCqBhDC,EA1BA,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAAa,EACLC,oBAAS,GADJ,mBACtBC,EADsB,KAChBC,EADgB,OAEcH,EAAOA,OAA1CI,EAFqB,EAErBA,MAAOC,EAFc,EAEdA,MAAOC,EAFO,EAEPA,IAAKf,EAFE,EAEFA,YAE3B,OACE,yBAAKK,UAAU,aACb,yBAAKA,UAAU,iBACb,wBAAIA,UAAU,uBAAuBQ,GACrC,yBAAKR,UAAU,oBAAoBW,IAAKF,EAAOG,IAAKJ,IACpD,uBACER,UAAU,wBACVa,KAAMH,EACNI,OAAO,SACPC,IAAI,uBAJN,wBAQA,4BAAQf,UAAU,uBAAuBgB,QAAS,kBAAMT,GAASD,KAAjE,eAGCA,GAAQ,kBAAC,EAAD,CAAeX,YAAaA,OCb9BsB,EARD,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACf,OACE,yBAAKlB,UAAU,SACb,4BAAKkB,KC6DIC,MA3Df,WAAgB,IAAD,EACad,mBAAS,IADtB,mBACNe,EADM,KACCC,EADD,OAEiBhB,mBAAS,IAF1B,mBAENiB,EAFM,KAEGC,EAFH,OAGalB,mBAAS,IAHtB,mBAGNa,EAHM,KAGCM,EAHD,KAQPd,EAAG,0CAAsCU,EAAtC,mBAHMK,WAGN,oBAFOA,oCAIVC,EAAO,uCAAG,4BAAAC,EAAA,yDACA,KAAVP,EADU,iCAESQ,IAAMC,IAAInB,GAFnB,WAENoB,EAFM,QAGAC,KAAKC,KAHL,yCAIHR,EAAS,2BAJN,OAMZS,QAAQC,IAAIJ,GACZP,EAAWO,EAAOC,KAAKI,MACvBd,EAAS,IACTG,EAAS,IATG,wBAWZA,EAAS,wBAXG,4CAAH,qDAsBb,OACE,yBAAKxB,UAAU,OACb,4BAAQA,UAAU,cAChB,wBAAIA,UAAU,aAAd,sBAGF,0BAAMoC,SAXO,SAACC,GAChBA,EAAEC,iBACFZ,KAS4Ba,MAAO,CAAEC,aAAc,SACpC,KAAVtB,GAAgB,kBAAC,EAAD,CAAOA,MAAOA,IAC/B,2BACElB,UAAU,aACVyC,KAAK,OACLC,KAAK,QACLC,SAnBS,SAACN,GAAD,OAAOhB,EAASgB,EAAEvB,OAAO8B,QAoBlCA,MAAOxB,EACPyB,aAAa,MACbC,YAAY,gBAEd,4BAAQ9C,UAAU,eAAlB,WAEF,yBAAKA,UAAU,WACZsB,IAAY,IACXA,EAAQ1B,KAAI,SAACQ,GAAD,OAAY,kBAAC,EAAD,CAAQN,IAAKC,cAAUK,OAAQA,UCxDjE2C,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.98788ffd.chunk.js","sourcesContent":["import React from 'react';\nimport { v4 as uuidv4 } from 'uuid';\n\nconst RecipeDetails = ({ ingredients }) => {\n  return ingredients.map((ingredient) => {\n    return (\n      <ul key={uuidv4()} className=\"ingredient-list\">\n        <li className=\"ingredient-text\">{ingredient.text}</li>\n        <li className=\"ingredient-weight\">Weight - {ingredient.weight}</li>\n      </ul>\n    );\n  });\n};\n\nexport default RecipeDetails;\n","import React, { useState } from 'react';\nimport RecipeDetails from './RecipeDetails';\n\nconst Recipe = ({ recipe }) => {\n  const [show, setShow] = useState(false);\n  const { label, image, url, ingredients } = recipe.recipe;\n\n  return (\n    <div className=\"container\">\n      <div className=\"active-recipe\">\n        <h2 className=\"active-recipe-title\">{label}</h2>\n        <img className=\"active-recipe-img\" src={image} alt={label} />\n        <a\n          className=\"active-recipe-website\"\n          href={url}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Get full recipe here\n        </a>\n        <button className=\"active-recipe-button\" onClick={() => setShow(!show)}>\n          Ingredients\n        </button>\n        {show && <RecipeDetails ingredients={ingredients} />}\n      </div>\n    </div>\n  );\n};\n\nexport default Recipe;\n","import React from \"react\";\n\nconst Alert = ({ alert }) => {\n  return (\n    <div className=\"alert\">\n      <h3>{alert}</h3>\n    </div>\n  );\n};\n\nexport default Alert;\n","import React, { useState } from 'react';\nimport './App.css';\nimport Axios from 'axios';\nimport { v4 as uuidv4 } from 'uuid';\nimport Recipe from './components/Recipe';\nimport Alert from './components/Alert';\n\nfunction App() {\n  const [query, setQuery] = useState('');\n  const [recipes, setRecipes] = useState([]);\n  const [alert, setAlert] = useState('');\n\n  const APP_ID = process.env.REACT_APP_EDAMAM_ID;\n  const APP_KEY = process.env.REACT_APP_EDAMAM_KEY;\n\n  const url = `https://api.edamam.com/search?q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}`;\n\n  const getData = async () => {\n    if (query !== '') {\n      const result = await Axios.get(url);\n      if (!result.data.more) {\n        return setAlert('No food with such name');\n      }\n      console.log(result);\n      setRecipes(result.data.hits);\n      setQuery('');\n      setAlert('');\n    } else {\n      setAlert('Please fill the form');\n    }\n  };\n\n  const onChange = (e) => setQuery(e.target.value);\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    getData();\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1 className=\"App-title\">Recipe Search App</h1>\n      </header>\n\n      <form onSubmit={onSubmit} style={{ marginBottom: '2rem' }}>\n        {alert !== '' && <Alert alert={alert} />}\n        <input\n          className=\"form-input\"\n          type=\"text\"\n          name=\"query\"\n          onChange={onChange}\n          value={query}\n          autoComplete=\"off\"\n          placeholder=\"Search Food\"\n        />\n        <button className=\"form-button\">Search</button>\n      </form>\n      <div className=\"recipes\">\n        {recipes !== [] &&\n          recipes.map((recipe) => <Recipe key={uuidv4()} recipe={recipe} />)}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}